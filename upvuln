#!/usr/bin/bash

# ‚ú® System Update, Upgrade, and Cleanup Script ‚ú®

# Define Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
PURPLE='\033[0;35m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# Function to display a progress bar
progress_bar() {
    local width=50 # Width of the progress bar
    for ((i = 0; i <= 100; i++)); do
        # Calculate the number of filled and empty blocks
        filled=$((i * width / 100))
        empty=$((width - filled))
        # Create the progress bar string
        bar=$(printf "%-${filled}s" | tr ' ' '‚ñà')$(printf "%-${empty}s")
        # Print the progress bar with percentage on the same line
        printf "\r${GREEN}Progress: [%3d%%]${NC} [${YELLOW}%s${NC}]" $i "$bar"
        sleep 0.1
    done
    echo "" # Move to the next line after completion
}

# üõ†Ô∏è Check if the script is run as root
if [[ $EUID -ne 0 ]]; then
    echo -e "${RED}üö´ Error: This script must be run as root. Use sudo!${NC}"
    exit 1
fi

echo -e "${PURPLE}üöÄ Starting system update, upgrade, and cleanup process...${NC}"

# -------------------------
# Region --- Updates
# -------------------------
echo -e "${PURPLE}RUNNING: Updating package lists...${NC}"
progress_bar &
PROGRESS_PID=$! # Capture the PID of the progress bar
sudo apt clean
sudo apt update --fix-missing &>/dev/null
kill $PROGRESS_PID # Stop the progress bar
wait $!
echo -e "\r${GREEN}‚úÖ SUCCESS: Package lists updated successfully.${NC}\n"

# -------------------------
# Region --- Upgrades
# -------------------------
echo -e "${PURPLE}RUNNING: Upgrading installed packages...${NC}"
progress_bar &
PROGRESS_PID=$!
sudo apt full-upgrade -y &>/dev/null
kill $PROGRESS_PID
wait $!
echo -e "\r${GREEN}‚úÖ SUCCESS: Installed packages upgraded successfully.${NC}\n"

# -------------------------
# Region --- Autoremove
# -------------------------
echo -e "${PURPLE}RUNNING: Removing unused packages...${NC}"
progress_bar &
PROGRESS_PID=$!
sudo apt autoremove -y &>/dev/null
kill $PROGRESS_PID
wait $!
echo -e "\r${GREEN}‚úÖ SUCCESS: Unused packages removed successfully.${NC}\n"

# -------------------------
# Region --- Cleanup
# -------------------------
echo -e "${PURPLE}RUNNING: Cleaning cached package files...${NC}"
progress_bar &
PROGRESS_PID=$!
sudo apt autoclean &>/dev/null
kill $PROGRESS_PID
wait $!
echo -e "\r${GREEN}‚úÖ SUCCESS: Cached package files cleaned successfully.${NC}\n"

# -------------------------
# Region --- Dependency Fixes
# -------------------------
echo -e "${PURPLE}RUNNING: Fixing broken dependencies...${NC}"
progress_bar &
PROGRESS_PID=$!
dpkg --configure -a && apt install -f -y &>/dev/null
kill $PROGRESS_PID
wait $!
echo -e "\r${GREEN}‚úÖ SUCCESS: Broken dependencies fixed successfully.${NC}\n"

# -------------------------
# Region --- Self-Move
# -------------------------
echo -e "${PURPLE}üì¶ Moving upvuln to /usr/local/bin/...${NC}"

# Check if the script already exists in /usr/local/bin/
if [[ -f "/usr/local/bin/upvuln" ]]; then
    echo -e "${YELLOW}‚ÑπÔ∏è INFO: upvuln already exists in /usr/local/bin/. Skipping move.${NC}"
else
    if mv "$0" /usr/local/bin/upvuln; then
        echo -e "${GREEN}‚úÖ SUCCESS: upvuln moved to /usr/local/bin/ successfully.${NC}"
    else
        echo -e "${RED}‚ùå FAILED: Failed to move upvuln to /usr/local/bin/.${NC}"
        exit 1
    fi
fi

# -------------------------
# Region --- Exiting
# -------------------------
echo -e "${PURPLE}Exiting BasherUpdate...${NC}\n"
exit 0
